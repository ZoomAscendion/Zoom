{{ config(
    materialized='table'
) }}

-- Meeting Activity Fact Table
WITH meeting_base AS (
    SELECT 
        m.MEETING_ID,
        m.HOST_ID,
        m.MEETING_TOPIC,
        m.MEETING_TYPE,
        m.START_TIME,
        m.END_TIME,
        m.DURATION_MINUTES,
        m.HOST_NAME,
        m.MEETING_STATUS,
        m.RECORDING_STATUS,
        m.PARTICIPANT_COUNT,
        COALESCE(m.DATA_QUALITY_SCORE, 1.0) AS DATA_QUALITY_SCORE,
        m.SOURCE_SYSTEM
    FROM DB_POC_ZOOM.SILVER.SI_MEETINGS m
    WHERE COALESCE(m.DATA_QUALITY_SCORE, 1.0) >= 0.8
      AND COALESCE(m.MEETING_STATUS, 'Unknown') = 'Completed'
      AND COALESCE(m.DURATION_MINUTES, 0) > 0
),

user_info AS (
    SELECT 
        USER_ID,
        PLAN_TYPE
    FROM DB_POC_ZOOM.SILVER.SI_USERS
    WHERE COALESCE(DATA_QUALITY_SCORE, 1.0) >= 0.8
),

feature_usage AS (
    SELECT 
        MEETING_ID,
        COUNT(DISTINCT FEATURE_NAME) AS FEATURE_USAGE_COUNT
    FROM DB_POC_ZOOM.SILVER.SI_FEATURE_USAGE
    WHERE COALESCE(DATA_QUALITY_SCORE, 1.0) >= 0.8
    GROUP BY MEETING_ID
),

participant_totals AS (
    SELECT 
        MEETING_ID,
        SUM(COALESCE(ATTENDANCE_DURATION, 0)) AS TOTAL_ATTENDANCE_MINUTES
    FROM DB_POC_ZOOM.SILVER.SI_PARTICIPANTS
    WHERE COALESCE(DATA_QUALITY_SCORE, 1.0) >= 0.8
    GROUP BY MEETING_ID
),

fact_meeting_activity AS (
    SELECT 
        CONCAT('FACT_MEET_', m.MEETING_ID, '_', TO_CHAR(m.START_TIME, 'YYYYMMDD')) AS FACT_MEETING_ACTIVITY_ID,
        DATE(m.START_TIME) AS DATE_KEY,
        m.HOST_ID AS USER_KEY,
        UPPER(REPLACE(COALESCE(m.MEETING_TYPE, 'UNKNOWN'), ' ', '_')) AS MEETING_TYPE_KEY,
        DATE(m.START_TIME) AS MEETING_DATE,
        COALESCE(m.DURATION_MINUTES, 0) AS MEETING_DURATION_MINUTES,
        COALESCE(m.PARTICIPANT_COUNT, 0) AS PARTICIPANT_COUNT,
        COALESCE(m.MEETING_TYPE, 'Unknown') AS MEETING_TYPE,
        CASE WHEN COALESCE(m.RECORDING_STATUS, 'No') = 'Yes' THEN TRUE ELSE FALSE END AS RECORDING_ENABLED_FLAG,
        COALESCE(fu.FEATURE_USAGE_COUNT, 0) AS FEATURE_USAGE_COUNT,
        COALESCE(pt.TOTAL_ATTENDANCE_MINUTES, 0) AS TOTAL_ATTENDANCE_MINUTES,
        COALESCE(u.PLAN_TYPE, 'Unknown') AS HOST_PLAN_TYPE,
        COALESCE(m.MEETING_STATUS, 'Unknown') AS MEETING_STATUS,
        CURRENT_DATE() AS LOAD_DATE,
        CURRENT_DATE() AS UPDATE_DATE,
        'SILVER_LAYER' AS SOURCE_SYSTEM
    FROM meeting_base m
    LEFT JOIN user_info u ON m.HOST_ID = u.USER_ID
    LEFT JOIN feature_usage fu ON m.MEETING_ID = fu.MEETING_ID
    LEFT JOIN participant_totals pt ON m.MEETING_ID = pt.MEETING_ID
)

SELECT * FROM fact_meeting_activity
